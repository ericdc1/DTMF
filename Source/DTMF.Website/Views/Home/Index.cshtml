@model IEnumerable<DTMF.Models.AppInfoExtended>
@{
    ViewBag.Title = "DTMF";
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-danger">@TempData["Message"].ToString()</div>
}

<table class="table table-striped">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AppName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LatestVersion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DestinationVersion)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td class="apptitle">
                @Html.ActionLink(item.AppName, "DetailedApp", "Home", new { item.AppName }, new { @title = "View more information" }) <i class="glyphicon glyphicon-time" title="Last deployed @item.LastDeployed"></i>
                @if (item.FastAppOffline)
                {<i class="glyphicon glyphicon-flash" title="Fast App_Offline enabled" style="font-size:.75em"></i>}
            </td>
            <td>
                <span class="latest label"><img src="../../Content/moving.gif" alt="" height="10" /></span>
            </td>
            <td>
                <span class="destination label"><img src="../../Content/moving.gif" alt="" height="10" /></span>
            </td>
            <td class="appbuttons">
                @if (item.IsValid)
                {
                    <form id="@item.AppName.Replace(".","")-form" method="post" action="@Url.Action(item.SyncInfo.Action, new { item.AppName })" title="@item.SyncInfo.Title" style="display: inline">
                        <button disabled type="submit" class="sync btn @item.SyncInfo.ClassName">
                            <i class='glyphicon glyphicon-retweet'></i>
                            @item.SyncInfo.Text
                        </button>
                    </form>
                    <a href="@Url.Action("ViewConfig", "Configuration",new { item.AppName })" class="btn btn-default noconfirm" title="View configuration"><i class='glyphicon glyphicon-cog'></i></a>
                    <a href="@Url.Action("History", "Log",new { item.AppName })" class="btn btn-default noconfirm" title="View deployment log"><i class='glyphicon glyphicon-calendar'></i></a>
                    if (Utilities.CanDeploy)
                    {
                        <form method="post" class="js-rollback-form" action="@Url.Action("Rollback",new { item.AppName })" style="display: none">
                            <button type="submit" class="rollback btn btn-default">
                                <i class='glyphicon glyphicon-backward'></i>
                            </button>
                        </form>
                    }
                }
                else
                {
                    <span>Invalid Configuration: @item.InvalidMessage</span>
                }

            </td>
        </tr>
    }

</table>
Total execution time: @Math.Round(DateTime.Now.Subtract(System.Web.HttpContext.Current.Timestamp).TotalSeconds, 3)

@section footer {
    <div class="container" style="padding: .5em">
        <p style="color: white">
            Add to Homescreen?
            <button id="installYay" class="btn-success btn" style="margin-right: 1em">Add</button>
            <button id="installNay" class="btn-danger btn">Nope!</button>
        </p>

    </div>
}

@section scripts{
    <script>
        $(document).ready(function () {
            $('form:not(.noconfirm)').submit(function () {
                return confirm(this.title + '?');
            });

            $('.apptitle').each(function () {
                $(this).find('a').each(function () {
                    var parentrow = $(this).closest('tr');
                    var appname = this.innerHTML;
                    $.get("/home/getversioninfo/?appname=" + appname, function (data) {
                        var adata = data.split("|");
                        parentrow.find('.latest').html(adata[0]).addClass("label-default");
                        parentrow.find('.destination').html(adata[1]).addClass("label-success");
                        if (adata[0] != adata[1]) {
                            parentrow.find('.destination').removeClass('label-success').addClass('label-danger');
                        }
                        if (adata[0] == adata[1]) {
                            parentrow.find('.sync').removeClass("btn-primary").addClass('btn-default');
                        }
                        if (adata[2] != adata[1] && adata[2] != 'invalid') {
                            parentrow.find('.js-rollback-form').css("display", "inline").attr('title', 'Restore ' + appname + ' to version ' + adata[2]);
                        }
                        
                        $("#" + appname.replace(".", "") + "-form button").prop('disabled', false);
                    });

                });
            });
        });

        var deferredInstall;

        window.addEventListener('beforeinstallprompt', (e) => {
            console.log("deferrer");
            // Prevent Chrome 67 and earlier from automatically showing the prompt
            e.preventDefault();
            deferredInstall = e;
            $("#installPrompter").show();
        });

        $("#installYay").click(function () {
            $("#installPrompter").hide();
            deferredInstall.prompt();
        });

        $("#installNay").click(function () {
            $("#installPrompter").hide();
        });


    </script>
}
@if (Utilities.CanDeploy)
{
    <br><br>
    <a href="https://deploy.hsc.wvu.edu/Log/History?AppName=RoboLogs">Daily RoboLogs</a>
}
